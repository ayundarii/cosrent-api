// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model CosplayCatalog {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  name            String
  description     String?
  size            String
  price           Int
  items           Item[]
  img             String
  availability    Boolean
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      Int
  transaction     Transaction[]             
}

model Item {
  id              Int               @id @default(autoincrement())
  name            String
  description     String?
  cosplayCatalog  CosplayCatalog    @relation(fields: [catalogId], references: [id])
  catalogId       Int
}

model Category {
  id              Int               @id @default(autoincrement())
  category        String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  description     String?
  catalogs        CosplayCatalog[]
}

model Transaction {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  rentalStartDate DateTime
  rentalEndDate   DateTime
  description     String?
  totalCost       Int
  status          String           
  cosplayCatalog  CosplayCatalog    @relation(fields: [catalogId], references: [id])
  catalogId       Int
  user            User              @relation(fields: [userId], references: [id])
  userId          Int   
}

model User {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  username        String            @unique
  password        String
  role            Int    
  transactions    Transaction[]
}